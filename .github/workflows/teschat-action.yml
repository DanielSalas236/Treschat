# This is a basic workflow to help you get started with Actions

name: deploy-staging

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  push:
    branches: [ development ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Generate artifact
        run: |
          sudo chmod +x gradlew
          sudo ./gradlew build
          sudo apt-get update
          sudo apt-get install -y zip
          zip -j treschat.zip build/libs/treschat-0.0.1-SNAPSHOT.jar appspec.yml scripts/install_app.sh
          pwd
          ls

#       - name: Upload artifact
#         run: |
#           pwd
#           ls
#         uses: jakejarvis/s3-sync-action@master
#         env:
#           SOURCE_DIR: 'treschat.zip'
#           AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#           AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#        uses: medlypharmacy/s3-artifacts-action@master
#        with:
#          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws_s3_bucket_name: ${{ secrets.S3_BUCKET }}
#          source_path: './treschat.zip'
#          exclude_repo_from_destination_path: true
#          resource_type: "FILE"

#        uses: zoispag/action-s3-upload-artifact@v1
#        id: s3
#        with:
#          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          bucket: ${{ secrets.S3_BUCKET }}
#          bucket_root: ''
#          key: my-app-1.0.0
#          path: ./treschat.zip

#      - name: Output path
#        run: echo ${{ steps.s3.outputs.object_path }}
      - name: Deployment Folder
        run: |
          mkdir deployment
          mv build/libs/tresox-0.0.1-SNAPSHOT.jar deployment/
          cp appspec.yml deployment/
          cp scripts/install_app.sh deployment/
          
      - name: AWS CodeDeploy
        uses: sourcetoad/aws-codedeploy-action@v1
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_DEFAULT_REGION }}
          codedeploy_name: ${{ secrets.APPLICATION_NAME }}
          codedeploy_group: ${{ secrets.DEPLOYMENT_GROUP }}
          s3_bucket: ${{ secrets.S3_BUCKET }}
          s3_folder: '/'
          directory: ./deployment/
